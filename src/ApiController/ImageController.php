<?php

namespace App\ApiController;

use App\Entity\Image;
use FOS\RestBundle\Controller\Annotations as Rest;
use FOS\RestBundle\Controller\AbstractFOSRestController;
use FOS\RestBundle\View\View;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\Request;

/**
 * @Rest\Route("/image", host="api.masommeliere.fr")
 */
class ImageController extends AbstractFOSRestController
{
    /**
     * Creates a Image resource
     * @Rest\Post(
     *     path="/new",
     *     name="image_create_api")
     * @Rest\View()
     * @param Request $request
     * @return View
     */
    public function create(Request $request):View
    {
        $image = new Image();
        $file = $request->files->get('file');

        if ($file) {
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

            // Move the file to the directory where brochures are stored
            try {
                $file->move(
                    $this->getParameter('image_abs_path'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $image->setPath($this->getParameter('image_abs_path') . '/' . $fileName);
            $image->setImgPath($this->getParameter('image_path') . '/' . $fileName);
            $em = $this->getDoctrine()->getManager();
            $em->persist($image);
            $em->flush();
        }
        return View::create($image, Response::HTTP_CREATED);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
